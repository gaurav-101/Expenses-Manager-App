{"version":3,"sources":["components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpenseChart.js","components/Expenses/Expenses.js","App.js","index.js"],"names":["ExpenseForm","props","useState","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","event","preventDefault","expenseData","title","amount","date","Date","onSaveExpenseData","className","type","value","onChange","target","min","step","max","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","id","Math","random","toString","onAddExpense","Card","classes","children","ExpensesFilter","selected","onChangeFilter","ExpenseDate","month","toLocaleString","day","year","getFullYear","ExpenseItem","ExpensesList","items","length","map","expense","ChartBar","barFillHeight","maxValue","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","ExpenseChart","chartDataPoints","expenses","getMonth","Expenses","filteredYear","setFilteredYear","filteredExpenses","filter","selectedYear","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.af831223.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nimport './ExpenseForm.css';\n\nconst ExpenseForm = (props) => {\n  const [enteredTitle, setEnteredTitle] = useState('');\n  const [enteredAmount, setEnteredAmount] = useState('');\n  const [enteredDate, setEnteredDate] = useState('');\n  // const [userInput, setUserInput] = useState({\n  //   enteredTitle: '',\n  //   enteredAmount: '',\n  //   enteredDate: '',\n  // });\n\n  const titleChangeHandler = (event) => {\n    setEnteredTitle(event.target.value);\n    // setUserInput({\n    //   ...userInput,\n    //   enteredTitle: event.target.value,\n    // });\n    // setUserInput((prevState) => {\n    //   return { ...prevState, enteredTitle: event.target.value };\n    // });\n  };\n\n  const amountChangeHandler = (event) => {\n    setEnteredAmount(event.target.value);\n    // setUserInput({\n    //   ...userInput,\n    //   enteredAmount: event.target.value,\n    // });\n  };\n\n  const dateChangeHandler = (event) => {\n    setEnteredDate(event.target.value);\n    // setUserInput({\n    //   ...userInput,\n    //   enteredDate: event.target.value,\n    // });\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const expenseData = {\n      title: enteredTitle,\n      amount: +enteredAmount,\n      date: new Date(enteredDate),\n    };\n\n    props.onSaveExpenseData(expenseData);\n    setEnteredTitle('');\n    setEnteredAmount('');\n    setEnteredDate('');\n  };\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className='new-expense__controls'>\n        <div className='new-expense__control'>\n          <label>Title</label>\n          <input\n            type='text'\n            value={enteredTitle}\n            onChange={titleChangeHandler}\n          />\n        </div>\n        <div className='new-expense__control'>\n          <label>Amount</label>\n          <input\n            type='number'\n            min='0.01'\n            step='0.01'\n            value={enteredAmount}\n            onChange={amountChangeHandler}\n          />\n        </div>\n        <div className='new-expense__control'>\n          <label>Date</label>\n          <input\n            type='date'\n            min='2019-01-01'\n            max='2022-12-31'\n            value={enteredDate}\n            onChange={dateChangeHandler}\n          />\n        </div>\n      </div>\n      <div className='new-expense__actions'>\n        <button type=\"button\" onClick={props.onCancel}>Cancel</button>\n        <button type='submit'>Add Expense</button>\n        \n      </div>\n    </form>\n  );\n};\n\nexport default ExpenseForm;\n","import React, { useState } from 'react';\n\nimport ExpenseForm from './ExpenseForm';\nimport './NewExpense.css';\n\nconst NewExpense = (props) => {\n  const [isEditing, setIsEditing]=useState(false);   // button for add expense\n\n  const saveExpenseDataHandler = (enteredExpenseData) => {\n    const expenseData = {\n      ...enteredExpenseData,\n      id: Math.random().toString()\n    };\n    props.onAddExpense(expenseData);\n    setIsEditing(false);\n  };\n\n  const startEditingHandler=()=>{\n    setIsEditing(true);\n  }\n\n  const stopEditingHandler=()=>{\n    setIsEditing(false);\n  }\n\n  return (\n    <div className='new-expense'>\n      {!isEditing && <button onClick={startEditingHandler}>Add New Expense</button>}\n      {isEditing && <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} onCancel={stopEditingHandler}/>}\n    </div>\n  );\n};\n\nexport default NewExpense;\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = (props) => {\n  const classes = 'card ' + props.className;\n\n  return <div className={classes}>{props.children}</div>;\n};\n\nexport default Card;\n","import React from 'react';\n\nimport './ExpensesFilter.css';\n\nconst ExpensesFilter = (props) => {\n  const dropdownChangeHandler = (event) => {\n    props.onChangeFilter(event.target.value);\n  };\n\n  return (\n    <div className='expenses-filter'>\n      <div className='expenses-filter__control'>\n        <label>Filter by year</label>\n        <select value={props.selected} onChange={dropdownChangeHandler}>\n          <option value='2022'>2022</option>\n          <option value='2021'>2021</option>\n          <option value='2020'>2020</option>\n          <option value='2019'>2019</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;\n","import React from 'react';\n\nimport './ExpenseDate.css';\n\nconst ExpenseDate = (props) => {\n  const month = props.date.toLocaleString('en-US', { month: 'long' });\n  const day = props.date.toLocaleString('en-US', { day: '2-digit' });\n  const year = props.date.getFullYear();\n\n  return (\n    <div className='expense-date'>\n      <div className='expense-date__month'>{month}</div>\n      <div className='expense-date__year'>{year}</div>\n      <div className='expense-date__day'>{day}</div>\n    </div>\n  );\n};\n\nexport default ExpenseDate;\n","import React from 'react';\n\nimport ExpenseDate from './ExpenseDate';\nimport Card from '../UI/Card';\nimport './ExpenseItem.css';\n\nconst ExpenseItem = (props) => {\n  return (\n    <li>\n      <Card className='expense-item'>\n        <ExpenseDate date={props.date} />\n        <div className='expense-item__description'>\n          <h2>{props.title}</h2>\n          <div className='expense-item__price'>${props.amount}</div>\n        </div>\n      </Card>\n    </li>\n  );\n}\n\nexport default ExpenseItem;\n","import React from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport './ExpensesList.css';\n\nconst ExpensesList=(props)=>{\n  if(props.items.length===0){\n    return <h2 className='expenses-list__fallback'>Found no expenses.</h2>\n  }\n\n    return <ul className=\"expenses-list\">\n        {props.items.map((expense)=>(\n            <ExpenseItem\n            key={expense.id}\n            title={expense.title}\n            amount={expense.amount}\n            date={expense.date}\n            />\n        ))}\n    </ul>\n};\nexport default ExpensesList;","import React from \"react\";\nimport \"./ChartBar.css\";\n\nconst ChartBar = (props) => {\n  let barFillHeight = '0%';\n  if (props.maxValue > 0) {\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\n  }\n  return (\n    <div className=\"chart-bar\">\n      <div className=\"chart-bar__inner\">\n        <div\n          className=\"chart-bar__fill\"\n          style={{ height: barFillHeight }}\n        ></div>\n      </div>\n      <div className=\"chart-bar__label\">{props.label}</div>\n    </div>\n  );\n};\n\nexport default ChartBar;\n","import React from \"react\";\nimport ChartBar from \"./ChartBar\";\nimport \"./Chart.css\";\n\nconst Chart = (props) => {\n    const dataPointValues=props.dataPoints.map(dataPoint=> dataPoint.value);\n    const totalMaximum=Math.max(...dataPointValues);\n  return (\n    <div className=\"chart\">\n      {props.dataPoints.map((dataPoint) => (\n        <ChartBar\n          key={dataPoint.label}\n          value={dataPoint.value}\n          maxValue={totalMaximum}\n          label={dataPoint.label}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Chart;\n","import React from 'react';\nimport Chart from '../Chart/Chart';\nconst ExpenseChart=props=>{\n    const  chartDataPoints=[\n        {label: 'Jan', value: 0},\n        {label: 'Feb', value: 0},\n        {label: 'Mar', value: 0},\n        {label: 'Apr', value: 0},\n        {label: 'May', value: 0},\n        {label: 'Jun', value: 0},\n        {label: 'Jul', value: 0},\n        {label: 'Aug', value: 0},\n        {label: 'Sep', value: 0},\n        {label: 'Oct', value: 0},\n        {label: 'Nov', value: 0},\n        {label: 'Dec', value: 0},\n    ];\n\n    for (const expense of props.expenses){\n        const expensMonth=expense.date.getMonth();\n        chartDataPoints[expensMonth].value+=expense.amount;\n    }\n    return <Chart dataPoints={chartDataPoints}/>;\n}\n\nexport default ExpenseChart;","import React, { useState } from 'react';\nimport Card from '../UI/Card';\nimport ExpensesFilter from './ExpensesFilter';\nimport ExpensesList from './ExpensesList';\nimport ExpenseChart from './ExpenseChart';\nimport './Expenses.css';\n\nconst Expenses = (props) => {\n  const [filteredYear, setFilteredYear] = useState('2020');\n\n  const filterChangeHandler = selectedYear => {\n    setFilteredYear(selectedYear);\n  };\n\n  const filteredExpenses=props.items.filter((expense)=>{\n    return expense.date.getFullYear().toString()===filteredYear;\n  })\n\n  \n\n  return (\n    <div>\n      <Card className='expenses'>\n        <ExpensesFilter selected={filteredYear} onChangeFilter={filterChangeHandler} />\n        <ExpenseChart expenses={filteredExpenses}/>\n        <ExpensesList items={filteredExpenses}/>\n        \n      </Card>\n    </div>\n  );\n};\n\nexport default Expenses;\n","import React, {useState} from 'react';\n\nimport NewExpense from './components/NewExpense/NewExpense';\nimport Expenses from './components/Expenses/Expenses';\n\nconst DUMMY_EXPENSES = [\n  {\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\n\nconst App = () => {\n  const [expenses, setExpenses]=useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = expense => {\n    setExpenses((prevExpenses)=>{\n      return [expense, ...expenses];\n    });\n  };\n\n  // return React.createElement(\n  //   'div',\n  //   {},\n  //   React.createElement('h2', {}, \"Let's get started!\"),\n  //   React.createElement(Expenses, { items: expenses })\n  // );\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}